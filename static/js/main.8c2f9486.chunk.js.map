{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPressed","handleKeyUp","e","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAIaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZH,WAAYE,EAAEE,OAfpB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACGT,EACC,oBAAGS,UAAU,eAAb,sCAGGT,EAHH,OAOA,mBAAGS,UAAU,eAAb,2CAhCV,GAAyBC,IAAMC,W,MCC/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.8c2f9486.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {};\n\nexport class App extends React.Component<Props> {\n  state = {\n    keyPressed: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this.setState({\n      keyPressed: e.key,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { keyPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        {keyPressed ? (\n          <p className=\"App__message\">\n            The last pressed key is\n            [\n            {keyPressed}\n            ]\n          </p>\n        ) : (\n          <p className=\"App__message\">Nothing was pressed yet</p>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}